name: Run Splice Analysis
on:
  workflow_dispatch: 
    inputs:
      splice:
        description: 'Name of <package>.yaml in splices (e.g., curl)'
        required: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    permissions:
      packages: read
    outputs:
      containers: ${{ steps.generate.outputs.containers }}
    name: Build Matrix
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup splice
        env:
          package: ${{ github.event.inputs.splice }}
        run: |
            pip install pyaml
            python scripts/prepare-splice.py ${package}
      - name: Generate matrix
        id: generate
        run: |
            pip install requests
            python scripts/generate-matrix.py ${{ env.package }}
            
  build:
    runs-on: ubuntu-latest
    needs:
      - prepare
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:
        # Each entry is a container, and then compiler within it, and a tag for the version, and the version
        container: ${{ fromJson(needs.prepare.outputs.containers) }}
        arch: ['linux/amd64'] # linux/ppc64le,linux/arm64 these take forever
        package: ["${{ env.package }}"]

    # Run tests inside the container above - we could also build with Dockerfile if desired
    container:
      image: ${{ matrix.container[0] }}
      options: "--platform=${{ matrix.arch }}"

    name: ${{ matrix.package }} ${{ matrix.container[0] }} ${{ matrix.container[1] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run analysis
        env:
          SPACK_ADD_DEBUG_FLAGS: true
        run: |
          apt-get update && apt-get install -y vim libtool
          cd /opt/spack && git fetch && git checkout vsoch/db-17-splice && cd -
          printf "spack python splice.py ${{ matrix.package }}@${{ matrix.container[3] }} ${{ env.splice }} ${{ matrix.package }}-${{ matrix.container[3] }}-splices.json ${command}\n"
          spack python splice.py ${{ matrix.package }}@${{ matrix.container[3] }} ${{ env.splice }} ${{ matrix.package }}-${{ matrix.container[3] }}-splices.json ${{ env.command}}
          
      - name: Save Result Artifact
        uses: actions/upload-artifact@v2
        with:
          name: "test-results-${{ env.package }}-${{ matrix.container[3] }}"
          path: ./results
